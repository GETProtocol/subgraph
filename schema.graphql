enum UsageEventType {
  EVENT_CREATED
  SOLD
  RESOLD
  SCANNED
  INVALIDATED
  CHECKED_IN
  CLAIMED
}

enum TopUpEventType {
  NON_CUSTODIAL
  CUSTODIAL
}

enum SpentFuelSource {
  PROTOCOL
  REMAINDER
}

type Protocol @entity {
  id: ID!
  averageReservedPerTicket: BigDecimal!
  reservedFuel: BigDecimal!
  reservedFuelProtocol: BigDecimal!
  currentReservedFuel: BigDecimal!
  currentReservedFuelProtocol: BigDecimal!
  spentFuel: BigDecimal!
  spentFuelProtocol: BigDecimal!
  currentSpentFuel: BigDecimal!
  currentSpentFuelProtocol: BigDecimal!
  collectedSpentFuel: BigDecimal!
  collectedSpentFuelProtocol: BigDecimal!
  totalSalesVolume: BigDecimal!
  topUpCount: BigInt!
  eventCount: BigInt!
  soldCount: BigInt!
  invalidatedCount: BigInt!
  resoldCount: BigInt!
  scannedCount: BigInt!
  checkedInCount: BigInt!
  claimedCount: BigInt!
}

type ProtocolDay @entity {
  id: ID!
  day: Int!
  averageReservedPerTicket: BigDecimal!
  reservedFuel: BigDecimal!
  reservedFuelProtocol: BigDecimal!
  spentFuel: BigDecimal!
  spentFuelProtocol: BigDecimal!
  currentSpentFuel: BigDecimal!
  currentSpentFuelProtocol: BigDecimal!
  collectedSpentFuel: BigDecimal!
  collectedSpentFuelProtocol: BigDecimal!
  totalSalesVolume: BigDecimal!
  topUpCount: BigInt!
  eventCount: BigInt!
  soldCount: BigInt!
  invalidatedCount: BigInt!
  resoldCount: BigInt!
  scannedCount: BigInt!
  checkedInCount: BigInt!
  claimedCount: BigInt!
}

type Integrator @entity {
  id: ID!
  averageReservedPerTicket: BigDecimal!
  availableFuel: BigDecimal!
  reservedFuel: BigDecimal!
  reservedFuelProtocol: BigDecimal!
  currentReservedFuel: BigDecimal!
  currentReservedFuelProtocol: BigDecimal!
  spentFuel: BigDecimal!
  spentFuelProtocol: BigDecimal!
  price: BigDecimal!
  activeTicketCount: Int!
  isBillingEnabled: Boolean!
  isConfigured: Boolean!
  salesTaxRate: BigDecimal!
  name: String!
  eventCount: BigInt!
  topUpCount: BigInt!
  soldCount: BigInt!
  invalidatedCount: BigInt!
  resoldCount: BigInt!
  scannedCount: BigInt!
  checkedInCount: BigInt!
  claimedCount: BigInt!
  relayers: [Relayer!]! @derivedFrom(field: "integrator")
  events: [Event!]! @derivedFrom(field: "integrator")
  tickets: [Ticket!]! @derivedFrom(field: "integrator")
  integratorDays: [IntegratorDay!]! @derivedFrom(field: "integrator")
  usageEvents: [UsageEvent!]! @derivedFrom(field: "integrator")
  topUpEvents: [TopUpEvent!]! @derivedFrom(field: "integrator")
}

type IntegratorDay @entity {
  id: ID! # Composite PK: integratorIndex-timestampAsDay
  integrator: Integrator!
  day: Int!
  averageReservedPerTicket: BigDecimal!
  availableFuel: BigDecimal!
  reservedFuel: BigDecimal!
  reservedFuelProtocol: BigDecimal!
  spentFuel: BigDecimal!
  spentFuelProtocol: BigDecimal!
  price: BigDecimal!
  eventCount: BigInt!
  topUpCount: BigInt!
  soldCount: BigInt!
  invalidatedCount: BigInt!
  resoldCount: BigInt!
  scannedCount: BigInt!
  checkedInCount: BigInt!
  claimedCount: BigInt!
}

type Relayer @entity {
  id: ID!
  integrator: Integrator!
  isEnabled: Boolean!
}

type Event @entity {
  id: ID!
  eventIndex: BigInt!
  createTx: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  integrator: Integrator!
  relayer: Relayer!
  usageEvents: [UsageEvent!]! @derivedFrom(field: "event")
  tickets: [Ticket!]! @derivedFrom(field: "event")
  accountDeductionUsd: BigDecimal!
  reservedFuel: BigDecimal!
  reservedFuelProtocol: BigDecimal!
  averageReservedPerTicket: BigDecimal!
  soldCount: BigInt!
  resoldCount: BigInt!
  scannedCount: BigInt!
  checkedInCount: BigInt!
  invalidatedCount: BigInt!
  claimedCount: BigInt!
  name: String!
  shopUrl: String!
  imageUrl: String!
  latitude: BigDecimal!
  longitude: BigDecimal!
  currency: String!
  startTime: BigInt!
  endTime: BigInt!
}

type Ticket @entity {
  id: ID!
  tokenId: BigInt!
  createTx: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  usageEvents: [UsageEvent!]! @derivedFrom(field: "ticket")
  event: Event!
  integrator: Integrator!
  relayer: Relayer!
  owner: Bytes!
  basePrice: BigDecimal!
  reservedFuel: BigDecimal!
  reservedFuelProtocol: BigDecimal!
  isScanned: Boolean!
  isCheckedIn: Boolean!
  isInvalidated: Boolean!
  isClaimed: Boolean!
}

type PriceOracle @entity {
  id: ID!
  price: BigDecimal!
  lastUpdateTimestamp: BigInt!
  lastUpdateTx: Bytes!
  lastCustodialSwapPrice: BigDecimal!
}

type SpentFuelRecipient @entity {
  id: ID!
  source: SpentFuelSource!
  collectedSpentFuel: BigDecimal!
  label: String!
  percentage: BigDecimal!
  isEnabled: Boolean!
  spentFuelCollectedEvents: [SpentFuelCollectedEvent!]! @derivedFrom(field: "recipient")
}

type TopUpEvent @entity {
  id: ID! # Composite PK: txHash
  txHash: Bytes!
  invoiceNumber: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  day: Int!
  integrator: Integrator!
  integratorIndex: String!
  type: TopUpEventType!
  total: BigDecimal!
  totalUsd: BigDecimal!
  salesTaxRate: BigDecimal!
  salesTax: BigDecimal!
  price: BigDecimal!
  externalId: Bytes!
}

type UsageEvent @entity {
  id: ID! # Composite PK: txHash-logIndex
  txHash: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  day: Int!
  integrator: Integrator!
  integratorIndex: String!
  relayer: Relayer!
  relayerAddress: Bytes!
  orderTime: BigInt!
  price: BigDecimal!
  type: UsageEventType!
  getUsed: BigDecimal!
  getUsedProtocol: BigDecimal!
  nftId: String!
  event: Event!
  eventIndex: BigInt!
  eventAddress: Bytes!
  ticket: Ticket!
  tokenId: BigInt!
  latitude: BigDecimal!
  longitude: BigDecimal!
}

type SpentFuelCollectedEvent @entity {
  id: ID! # Composite PK: txHash-logIndex
  txHash: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  day: Int!
  recipient: SpentFuelRecipient!
  recipientAddress: Bytes!
  recipientLabel: String!
  recipientPercentage: BigDecimal!
  amount: BigDecimal!
  totalAmountCollected: BigDecimal!
}
