specVersion: 0.0.2
schema:
  file: ./schema.graphql
{{ #graft }}
graft:
  base: {{ graft.base }}
  block: {{ graft.block }}
features:
  - grafting
{{ /graft }}
dataSources:
{{ #v1.BaseGET }}
  - kind: ethereum/contract
    name: BaseGETV1
    network: {{ network }} 
    source:
      address: "{{ v1.BaseGET.address }}"
      abi: BaseGETV1
      startBlock: {{ v1.BaseGET.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Protocol
        - ProtocolDay
        - Integrator
        - IntegratorDay
        - Event
        - Ticket
        - UsageEvent
      abis:
        - name: BaseGETV1
          file: ./abis/v1/BaseGET.json
      eventHandlers:
        - event: primarySaleMint(indexed uint256,indexed uint64,address,address,uint256,indexed uint64)
          handler: handlePrimarySaleMint
        - event: ticketInvalidated(indexed uint256,indexed uint64,address,indexed uint64)
          handler: handleTicketInvalidated
        - event: secondarySale(indexed uint256,indexed uint64,address,address,uint256,indexed uint64)
          handler: handleSecondarySale
        - event: ticketScanned(indexed uint256,indexed uint64,indexed uint64)
          handler: handleTicketScanned
        - event: nftClaimed(indexed uint256,indexed uint64,address,indexed uint64)
          handler: handleNftClaimed
      file: ./src/mappings/v1/baseGET.ts

{{ /v1.BaseGET }}
{{ #v1.EconomicsGET }}
  - kind: ethereum/contract
    name: EconomicsGETV1
    network: {{ network }}
    source:
      address: "{{ v1.EconomicsGET.address }}"
      abi: EconomicsGETV1
      startBlock: {{ v1.EconomicsGET.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Relayer
      abis:
        - name: EconomicsGETV1
          file: ./abis/v1/EconomicsGET.json
      eventHandlers:
        - event: configChanged(address)
          handler: handleConfigChanged
      file: ./src/mappings/v1/economicsGET.ts

{{ /v1.EconomicsGET }}
{{ #v1.EventMetadataStorage }}
  - kind: ethereum/contract
    name: EventMetadataStorageV1
    network: {{ network }}
    source:
      address: "{{ v1.EventMetadataStorage.address }}"
      abi: EventMetadataStorageV1
      startBlock: {{ v1.EventMetadataStorage.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Event
        - UsageEvent
      abis:
        - name: EventMetadataStorageV1
          file: ./abis/v1/EventMetadataStorage.json
      eventHandlers:
        - event: newEventRegistered(indexed address,indexed uint256,string,indexed uint256)
          handler: handleNewEventRegistered
      file: ./src/mappings/v1/eventMetadataStorage.ts

{{ /v1.EventMetadataStorage }}
{{ #v1_1.BaseGET }}
  - kind: ethereum/contract
    name: BaseGETV1_1
    network: {{ network }}
    source:
      address: "{{ v1_1.BaseGET.address }}"
      abi: BaseGETV1_1
      startBlock: {{ v1_1.BaseGET.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Protocol
        - ProtocolDay
        - Integrator
        - IntegratorDay
        - Event
        - Ticket
        - UsageEvent
      abis:
        - name: BaseGETV1_1
          file: ./abis/v1.1/BaseGET.json
        - name: EconomicsGETV1_1
          file: ./abis/v1.1/EconomicsGET.json
      eventHandlers:
        - event: PrimarySaleMint(indexed uint256,indexed uint64,indexed uint64,uint256)
          handler: handlePrimarySaleMint
        - event: TicketInvalidated(indexed uint256,indexed uint64,indexed uint64)
          handler: handleTicketInvalidated
        - event: SecondarySale(indexed uint256,indexed uint64,indexed uint64,uint256)
          handler: handleSecondarySale
        - event: TicketScanned(indexed uint256,indexed uint64,indexed uint64)
          handler: handleTicketScanned
        - event: CheckedIn(indexed uint256,indexed uint64,indexed uint64)
          handler: handleCheckedIn
        - event: NftClaimed(indexed uint256,indexed uint64,indexed uint64)
          handler: handleNftClaimed
      file: ./src/mappings/v1.1/baseGET.ts

{{ /v1_1.BaseGET }}
{{ #v1_1.EconomicsGET }}
  - kind: ethereum/contract
    name: EconomicsGETV1_1
    network: {{ network }}
    source:
      address: "{{ v1_1.EconomicsGET.address }}"
      abi: EconomicsGETV1_1
      startBlock: {{ v1_1.EconomicsGET.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Integrator
        - IntegratorDay
        - Protocol
        - ProtocolDay
        - TopUpEvent
      abis:
        - name: EconomicsGETV1_1
          file: ./abis/v1.1/EconomicsGET.json
      eventHandlers:
        - event: RelayerConfiguration(address,uint32[12])
          handler: handleRelayerConfiguration
        - event: DepotSwiped(address,uint256)
          handler: handleDepotSwiped
        - event: RelayerToppedUpBuffer(indexed address,indexed uint256,uint256,indexed uint256)
          handler: handleRelayerToppedUpBuffer
        - event: AveragePriceUpdated(indexed address,indexed uint256,indexed uint256)
          handler: handleAveragePriceUpdated
        - event: AverageSiloPriceUpdated(address,uint256,uint256)
          handler: handleAverageSiloPriceUpdated
        - event: SiloBalanceCorrected(address,uint256,uint256,uint256)
          handler: handleSiloBalanceCorrected
      file: ./src/mappings/v1.1/economicsGET.ts

{{ /v1_1.EconomicsGET }}
{{ #v1_1.EventMetadataStorage }}
  - kind: ethereum/contract
    name: EventMetadataStorageV1_1
    network: {{ network }}
    source:
      address: "{{ v1_1.EventMetadataStorage.address }}"
      abi: EventMetadataStorageV1_1
      startBlock: {{ v1_1.EventMetadataStorage.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Event
        - UsageEvent
      abis:
        - name: EventMetadataStorageV1_1
          file: ./abis/v1.1/EventMetadataStorage.json
      eventHandlers:
        - event: NewEventRegistered(indexed address,indexed uint256,string,indexed uint256)
          handler: handleNewEventRegistered
      file: ./src/mappings/v1.1/eventMetadataStorage.ts

{{ /v1_1.EventMetadataStorage }}
{{ #v1_1.GETProtocolConfigurationV2 }}
  - kind: ethereum/contract
    name: GETProtocolConfigurationV2V1_1
    network: {{ network }}
    source:
      address: "{{ v1_1.GETProtocolConfigurationV2.address }}"
      abi: GETProtocolConfigurationV2V1_1
      startBlock: {{ v1_1.GETProtocolConfigurationV2.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Event
        - PriceOracle
        - UsageEvent
      abis:
        - name: GETProtocolConfigurationV2V1_1
          file: ./abis/v1.1/GETProtocolConfigurationV2.json
      eventHandlers:
        - event: UpdateFeeCollector(address,address)
          handler: handleUpdateFeeCollector
        - event: UpdateGETUSD(uint256,uint256)
          handler: handleUpdateGETUSD
      file: ./src/mappings/v1.1/getProtocolConfigurationV2.ts

{{ /v1_1.GETProtocolConfigurationV2 }}
{{ #v1_1.getNFT_ERC721V3 }}
  - kind: ethereum/contract
    name: getNFT_ERC721V3V1_1
    network: {{ network }}
    source:
      address: "{{ v1_1.getNFT_ERC721V3.address }}"
      abi: getNFT_ERC721V3V1_1
      startBlock: {{ v1_1.getNFT_ERC721V3.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Event
        - PriceOracle
        - UsageEvent
      abis:
        - name: getNFT_ERC721V3V1_1
          file: ./abis/v1.1/getNFT_ERC721V3.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
      file: ./src/mappings/v1.1/getNFTERC721V3.ts

{{ /v1_1.getNFT_ERC721V3 }}
{{ #v2.Economics }}
  - kind: ethereum/contract
    name: EconomicsV2 
    network: {{ network }}
    source:
      address: "{{ v2.Economics.address }}"
      abi: EconomicsV2
      startBlock: {{ v2.Economics.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Integrator
        - IntegratorDay
        - Relayer
        - SpentFuelRecipients
      abis:
        - name: EconomicsV2
          file: ./abis/v2/Economics.json
      eventHandlers:
        - event: IntegratorConfigured(uint32,string,address,(uint24,uint24,uint24,uint24,uint24,uint24,uint24))
          handler: handleIntegratorConfigured
        - event: UpdateIntegratorName(uint32,string)
          handler: handleUpdateIntegratorName
        - event: UpdateDynamicRates(uint32,(uint24,uint24,uint24,uint24,uint24,uint24,uint24))
          handler: handleUpdateDynamicRates
        - event: IntegratorDisabled(uint32)
          handler: handleIntegratorDisabled
        - event: RelayerAdded(address,uint32)
          handler: handleRelayerAdded
        - event: RelayerRemoved(address,uint32)
          handler: handleRelayerRemoved
        - event: EnableIntegratorBilling(uint32)
          handler: handleEnableIntegratorBilling
        - event: DisableIntegratorBilling(uint32)
          handler: handleDisableIntegratorBilling
        - event: IntegratorToppedUp(indexed uint32,indexed uint256,uint256,indexed uint256,uint256)
          handler: handleIntegratorToppedUp
        - event: SpentFuelCollected((uint256,uint256,uint32))
          handler: handleSpentFuelCollected
        - event: AccountBalanceCorrected(uint32,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleAccountBalanceCorrected
        - event: UpdateIntegratorOnCredit(uint32,bool)
          handler: handleSetIntegratorOnCredit
        - event: UpdateProtocolRates((uint24,uint24,uint24,uint24,uint24,uint24,uint24))
          handler: handleUpdateProtocolRates
      file: ./src/mappings/v2/economics.ts

{{ /v2.Economics }}
{{ #v2.EventFactory }}
  - kind: ethereum/contract
    name: EventFactoryV2
    network: {{ network }}
    source:
      address: "{{ v2.EventFactory.address }}"
      abi: EventFactoryV2
      startBlock: {{ v2.EventFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Event
      abis:
        - name: EventFactoryV2
          file: ./abis/v2/EventFactory.json
      eventHandlers:
        - event: EventCreated(indexed uint256,indexed address)
          handler: handleEventCreated
      file: ./src/mappings/v2/eventFactory.ts

{{ /v2.EventFactory }}
{{ #v2.FuelDistributor }}
  - kind: ethereum/contract
    name: FuelDistributorV2
    network: {{ network }}
    source:
      address: "{{ v2.FuelDistributor.address }}"
      abi: FuelDistributorV2
      startBlock: {{ v2.FuelDistributor.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Event
      abis:
        - name: FuelDistributorV2
          file: ./abis/v2/FuelDistributor.json
      eventHandlers:
        - event: Distribute(uint256,uint256,address)
          handler: handleDistribute
        - event: UpdateDestinationsProtocol((address,uint24,string)[],(address,uint24,string)[])
          handler: handleUpdateDestinationsProtocol
        - event: UpdateDestinationsRemainder((address,uint24,string)[],(address,uint24,string)[])
          handler: handleUpdateDestinationsRemainder
      file: ./src/mappings/v2/fuelDistributor.ts

{{ /v2.FuelDistributor }}
{{ #v2.PriceOracle }}
  - kind: ethereum/contract
    name: PriceOracleV2 
    network: {{ network }}
    source:
      address: "{{ v2.PriceOracle.address }}"
      abi: PriceOracleV2
      startBlock: {{ v2.PriceOracle.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - PriceOracle
      abis:
        - name: PriceOracleV2
          file: ./abis/v2/PriceOracle.json
      eventHandlers:
        - event: UpdatePrice(uint256,uint256)
          handler: handleUpdatePrice
      file: ./src/mappings/v2/priceOracle.ts

{{ /v2.PriceOracle }}
{{ #v2.TopUp }}
  - kind: ethereum/contract
    name: TopUpV2 
    network: {{ network }}
    source:
      address: "{{ v2.TopUp.address }}"
      abi: TopUpV2
      startBlock: {{ v2.TopUp.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - TopUpEvent
      abis:
        - name: TopUpV2
          file: ./abis/v2/TopUp.json
      eventHandlers:
        - event: ToppedUpCustodial(indexed uint32,indexed address,uint256,uint256,uint256,bytes32)
          handler: handleToppedUpCustodial
        - event: ToppedUpNonCustodial(indexed uint32,indexed address,uint256,uint256,uint256)
          handler: handleToppedUpNonCustodial
      file: ./src/mappings/v2/topUp.ts

{{ /v2.TopUp }}
{{ #v2_1.EconomicsFactory }}
  - kind: ethereum/contract
    name: EconomicsFactory
    network: {{ network }}
    source:
      address: "{{ v2_1.EconomicsFactory.address }}"
      abi: EconomicsFactory
      startBlock: {{ v2_1.EconomicsFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/mappings/v2.1/economicsFactory.ts
      entities:
        - Protocol
        - ProtocolDay
        - Integrator
        - IntegratorDay
      abis:
        - name: EconomicsFactory
          file: ./abis/v2.1/EconomicsFactory.json
      eventHandlers:
        - event: EnableIntegratorBilling(uint32)
          handler: handleEnableIntegratorBilling
        - event: UpdateDynamicRates(indexed uint32,(uint24,uint24,uint24,uint24,uint24,uint24,uint24))
          handler: handleUpdateDynamicRates
        - event: UpdateIntegratorOnCredit(uint32,bool)
          handler: handleSetIntegratorOnCredit
        - event: IntegratorConfigured(indexed uint256,string,address,bool,(uint24,uint24,uint24,uint24,uint24,uint24,uint24))
          handler: handleIntegratorConfigured
        - event: IntegratorActivated(indexed uint32)
          handler: handleIntegratorActivated
        - event: IntegratorDisabled(indexed uint32)
          handler: handleIntegratorDisabled
        - event: ConfigurationStatusUpdated(indexed uint32,bool)
          handler: handleConfigurationStatusUpdated
        - event: BillingStatusUpdated(indexed uint32,bool)
          handler: handleBillingStatusUpdated
        - event: DisableIntegratorBilling(uint32)
          handler: handleDisableIntegratorBilling
        - event: RelayerAdded(indexed address,indexed uint256)
          handler: handleRelayerAdded
        - event: IntegratorToppedUp(indexed uint32,address,indexed uint256,uint256)
          handler: handleIntegratorToppedUp
        - event: EnableIntegratorBilling(uint32)
          handler: handleEnableIntegratorBilling
        - event: UpdateProtocolRates((uint24,uint24,uint24,uint24,uint24,uint24,uint24))
          handler: handleUpdateProtocolRates
        - event: IntegratorNameSet(uint256,string)
          handler: handleIntegratorNameSet

{{ /v2_1.EconomicsFactory }}
{{ #v2_1.DripCollector }}
  - kind: ethereum/contract
    name: DripCollector
    network: {{ network }}
    source:
      address: "{{ v2_1.DripCollector.address }}"
      abi: DripCollector
      startBlock: {{ v2_1.DripCollector.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/mappings/v2.1/dripCollector.ts
      entities:
        - Protocol
        - ProtocolDay
        - Integrator
        - IntegratorDay
      abis:
        - name: DripCollector
          file: ./abis/v2.1/DripCollector.json
      eventHandlers:
        - event: Claimed(indexed address,uint256)
          handler: handleClaimed

{{ /v2_1.DripCollector }}
templates:
{{ #v2.EventFactory }}
  - name: EventImplementation
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: EventImplementation
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/mappings/v2/eventImplementation.ts
      entities:
        - Protocol
        - ProtocolDay
        - Integrator
        - IntegratorDay
        - Event
        - Ticket
        - UsageEvent
      abis:
        - name: EventImplementation
          file: ./abis/v2/EventImplementation.json
      eventHandlers:
        - event: PrimarySale((uint256,bytes32,address,uint64,uint40)[],uint256,uint256)
          handler: handlePrimarySale
        - event: SecondarySale((uint256,bytes32,address,uint64,uint40)[],uint256,uint256)
          handler: handleSecondarySale
        - event: Scanned((uint256,bytes32,address,uint64,uint40)[],uint256,uint256)
          handler: handleScanned
        - event: CheckedIn((uint256,bytes32,address,uint64,uint40)[],uint256,uint256)
          handler: handleCheckedIn
        - event: Claimed((uint256,bytes32,address,uint64,uint40)[],uint256,uint256)
          handler: handleClaimed
        - event: Invalidated((uint256,bytes32,address,uint64,uint40)[],uint256,uint256)
          handler: handleInvalidated
        - event: EventDataSet((uint32,uint64,uint64,int32,int32,string,string,string,string))
          handler: handleEventDataSet
        - event: EventDataUpdated((uint32,uint64,uint64,int32,int32,string,string,string,string))
          handler: handleEventDataUpdated
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
          
{{ /v2.EventFactory }}
{{ #v2_1.EconomicsFactory }}
  - name: EconomicsImplementation
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: EconomicsImplementation
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/mappings/v2.1/economicsImplementation.ts
      entities:
        - Protocol
        - ProtocolDay
        - Integrator
        - IntegratorDay
        - Event
        - Ticket
        - UsageEvent
      abis:
        - name: EconomicsImplementation
          file: ./abis/v2.1/EconomicsImplementation.json
      eventHandlers:
        - event: RouteRequestFilled(address,uint256,uint256,address)
          handler: handleRouteRequestFilled

  - name: EventImplementationV2_1
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: EventImplementationV2_1
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/mappings/v2.1/eventImplementationV2.1.ts
      entities:
        - Protocol
        - Integrator
        - Event
        - UsageEvent
      abis:
        - name: EventImplementationV2_1
          file: ./abis/v2.1/EventImplementationV2.1.json
      eventHandlers:
        - event: EventDataSet((uint32,uint64,uint64,int32,int32,string,string,string,string))
          handler: handleEventDataSet
        - event: PrimarySale((uint256,bytes32,address,uint64,uint40)[],uint256,uint256)
          handler: handlePrimarySale
        - event: SecondarySale((uint256,bytes32,address,uint64,uint40)[],uint256,uint256)
          handler: handleSecondarySale
        - event: Scanned((uint256,bytes32,address,uint64,uint40)[],uint256,uint256)
          handler: handleScanned
        - event: CheckedIn((uint256,bytes32,address,uint64,uint40)[],uint256,uint256)
          handler: handleCheckedIn
        - event: Invalidated((uint256,bytes32,address,uint64,uint40)[],uint256,uint256)
          handler: handleInvalidated
        - event: Claimed((uint256,bytes32,address,uint64,uint40)[],uint256,uint256)
          handler: handleClaimed

  - name: FuelRouterWL
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: FuelRouterWL
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/mappings/v2.1/fuelRouterWL.ts
      entities:
        - Protocol
        - ProtocolDay
        - Integrator
        - IntegratorDay
      abis:
        - name: FuelRouterWL
          file: ./abis/v2.1/FuelRouterWL.json
      eventHandlers:
        - event: FuelRouted(indexed address,indexed address,indexed address,uint256,uint256,bool)
          handler: handleFuelRouted

  - name: FuelRouterDT
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: FuelRouterDT
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/mappings/v2.1/fuelRouterDT.ts
      entities:
        - Protocol
        - ProtocolDay
        - Integrator
        - IntegratorDay
      abis:
        - name: FuelRouterDT
          file: ./abis/v2.1/FuelRouterDT.json
      eventHandlers:
        - event: FuelRouted(indexed address,indexed address,indexed address,uint256,uint256,bool)
          handler: handleFuelRouted
{{ /v2_1.EconomicsFactory }}